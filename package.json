{
  "name": "abracadabra",
  "version": "0.0.1",
  "displayName": "Abracadabra",
  "publisher": "nicoespeon",
  "description": "Automated refactorings for VS Code (JS & TS)",
  "author": "Nicolas Carlo <nicolascarlo.espeon@gmail.com>",
  "license": "MIT",
  "repository": "nicoespeon/abracadabra",
  "homepage": "https://github.com/nicoespeon/abracadabra",
  "bugs": "https://github.com/nicoespeon/abracadabra/issues",
  "keywords": [
    "refactor",
    "legacy code",
    "javascript",
    "typescript",
    "react"
  ],
  "categories": [
    "Formatters",
    "Programming Languages",
    "Other"
  ],
  "icon": "docs/logo/abracadabra-vignette.png",
  "galleryBanner": {
    "color": "#34223A",
    "theme": "dark"
  },
  "engines": {
    "vscode": "^1.34.0"
  },
  "main": "./out/extension.js",
  "scripts": {
    "postinstall": "node ./node_modules/vscode/bin/install",
    "test": "jest",
    "build": "webpack --mode none",
    "watch": "webpack --mode none --watch",
    "prepackage": "rm -rf dist/*.vsix && rm -rf out/",
    "vscode:prepublish": "webpack --mode production",
    "package": "vsce package",
    "postpackage": "mkdir -p dist && mv *.vsix dist",
    "package:install": "code --install-extension dist/*.vsix"
  },
  "husky": {
    "hooks": {
      "pre-commit": "pretty-quick --staged"
    }
  },
  "devDependencies": {
    "@types/babel__traverse": "7.0.6",
    "@types/jest": "24.0.13",
    "@types/node": "10.12.21",
    "husky": "2.3.0",
    "jest": "24.8.0",
    "prettier": "1.17.1",
    "pretty-quick": "1.11.0",
    "ts-functionaltypes": "1.0.6",
    "ts-jest": "24.0.2",
    "ts-loader": "6.0.4",
    "tslint": "5.12.1",
    "typescript": "3.3.1",
    "vsce": "1.61.0",
    "vscode": "1.1.28",
    "webpack": "4.35.3",
    "webpack-cli": "3.3.5"
  },
  "dependencies": {
    "@babel/parser": "7.4.5",
    "@babel/traverse": "7.4.5",
    "@babel/types": "7.4.4",
    "recast": "0.18.1"
  },
  "activationEvents": [
    "onCommand:abracadabra.renameSymbol",
    "onCommand:abracadabra.extractVariable",
    "onCommand:abracadabra.inlineVariable",
    "onCommand:abracadabra.negateExpression",
    "onCommand:abracadabra.removeRedundantElse",
    "onCommand:abracadabra.flipIfElse",
    "onCommand:abracadabra.flipTernary",
    "onCommand:abracadabra.convertIfElseToTernary",
    "onCommand:abracadabra.convertTernaryToIfElse",
    "onCommand:abracadabra.moveStatementUp",
    "onCommand:abracadabra.moveStatementDown",
    "onCommand:abracadabra.addBracesToArrowFunction",
    "onLanguage:javascript",
    "onLanguage:javascriptreact",
    "onLanguage:typescript",
    "onLanguage:typescriptreact"
  ],
  "contributes": {
    "commands": [
      {
        "command": "abracadabra.renameSymbol",
        "title": "Rename Symbol",
        "category": "Abracadabra"
      },
      {
        "command": "abracadabra.extractVariable",
        "title": "Extract Variable",
        "category": "Abracadabra"
      },
      {
        "command": "abracadabra.inlineVariable",
        "title": "Inline Variable",
        "category": "Abracadabra"
      },
      {
        "command": "abracadabra.negateExpression",
        "title": "Negate Expression",
        "category": "Abracadabra"
      },
      {
        "command": "abracadabra.removeRedundantElse",
        "title": "Remove Redundant Else",
        "category": "Abracadabra"
      },
      {
        "command": "abracadabra.flipIfElse",
        "title": "Flip If/Else",
        "category": "Abracadabra"
      },
      {
        "command": "abracadabra.flipTernary",
        "title": "Flip Ternary",
        "category": "Abracadabra"
      },
      {
        "command": "abracadabra.convertIfElseToTernary",
        "title": "Convert If/Else to Ternary",
        "category": "Abracadabra"
      },
      {
        "command": "abracadabra.convertTernaryToIfElse",
        "title": "Convert Ternary to If/Else",
        "category": "Abracadabra"
      },
      {
        "command": "abracadabra.moveStatementUp",
        "title": "Move Statement Up",
        "category": "Abracadabra"
      },
      {
        "command": "abracadabra.moveStatementDown",
        "title": "Move Statement Down",
        "category": "Abracadabra"
      },
      {
        "command": "abracadabra.addBracesToArrowFunction",
        "title": "Add Braces to Arrow Function",
        "category": "Abracadabra"
      }
    ],
    "keybindings": [
      {
        "command": "abracadabra.extractVariable",
        "key": "ctrl+alt+v",
        "mac": "cmd+alt+v",
        "when": "editorTextFocus"
      },
      {
        "command": "abracadabra.inlineVariable",
        "key": "ctrl+alt+n",
        "mac": "cmd+alt+n",
        "when": "editorTextFocus"
      },
      {
        "command": "abracadabra.moveStatementUp",
        "key": "ctrl+shift+up",
        "mac": "cmd+shift+up",
        "when": "editorTextFocus"
      },
      {
        "command": "abracadabra.moveStatementDown",
        "key": "ctrl+shift+down",
        "mac": "cmd+shift+down",
        "when": "editorTextFocus"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "abracadabra.renameSymbol",
          "when": "editorLangId == javascript"
        },
        {
          "command": "abracadabra.renameSymbol",
          "when": "editorLangId == javascriptreact"
        },
        {
          "command": "abracadabra.renameSymbol",
          "when": "editorLangId == typescript"
        },
        {
          "command": "abracadabra.renameSymbol",
          "when": "editorLangId == typescriptreact"
        },
        {
          "command": "abracadabra.extractVariable",
          "when": "editorLangId == javascript"
        },
        {
          "command": "abracadabra.extractVariable",
          "when": "editorLangId == javascriptreact"
        },
        {
          "command": "abracadabra.extractVariable",
          "when": "editorLangId == typescript"
        },
        {
          "command": "abracadabra.extractVariable",
          "when": "editorLangId == typescriptreact"
        },
        {
          "command": "abracadabra.inlineVariable",
          "when": "editorLangId == javascript"
        },
        {
          "command": "abracadabra.inlineVariable",
          "when": "editorLangId == javascriptreact"
        },
        {
          "command": "abracadabra.inlineVariable",
          "when": "editorLangId == typescript"
        },
        {
          "command": "abracadabra.inlineVariable",
          "when": "editorLangId == typescriptreact"
        },
        {
          "command": "abracadabra.negateExpression",
          "when": "editorLangId == javascript"
        },
        {
          "command": "abracadabra.negateExpression",
          "when": "editorLangId == javascriptreact"
        },
        {
          "command": "abracadabra.negateExpression",
          "when": "editorLangId == typescript"
        },
        {
          "command": "abracadabra.negateExpression",
          "when": "editorLangId == typescriptreact"
        },
        {
          "command": "abracadabra.removeRedundantElse",
          "when": "editorLangId == javascript"
        },
        {
          "command": "abracadabra.removeRedundantElse",
          "when": "editorLangId == javascriptreact"
        },
        {
          "command": "abracadabra.removeRedundantElse",
          "when": "editorLangId == typescript"
        },
        {
          "command": "abracadabra.removeRedundantElse",
          "when": "editorLangId == typescriptreact"
        },
        {
          "command": "abracadabra.flipIfElse",
          "when": "editorLangId == javascript"
        },
        {
          "command": "abracadabra.flipIfElse",
          "when": "editorLangId == javascriptreact"
        },
        {
          "command": "abracadabra.flipIfElse",
          "when": "editorLangId == typescript"
        },
        {
          "command": "abracadabra.flipIfElse",
          "when": "editorLangId == typescriptreact"
        },
        {
          "command": "abracadabra.flipTernary",
          "when": "editorLangId == javascript"
        },
        {
          "command": "abracadabra.flipTernary",
          "when": "editorLangId == javascriptreact"
        },
        {
          "command": "abracadabra.flipTernary",
          "when": "editorLangId == typescript"
        },
        {
          "command": "abracadabra.flipTernary",
          "when": "editorLangId == typescriptreact"
        },
        {
          "command": "abracadabra.convertIfElseToTernary",
          "when": "editorLangId == javascript"
        },
        {
          "command": "abracadabra.convertIfElseToTernary",
          "when": "editorLangId == javascriptreact"
        },
        {
          "command": "abracadabra.convertIfElseToTernary",
          "when": "editorLangId == typescript"
        },
        {
          "command": "abracadabra.convertIfElseToTernary",
          "when": "editorLangId == typescriptreact"
        },
        {
          "command": "abracadabra.convertTernaryToIfElse",
          "when": "editorLangId == javascript"
        },
        {
          "command": "abracadabra.convertTernaryToIfElse",
          "when": "editorLangId == javascriptreact"
        },
        {
          "command": "abracadabra.convertTernaryToIfElse",
          "when": "editorLangId == typescript"
        },
        {
          "command": "abracadabra.convertTernaryToIfElse",
          "when": "editorLangId == typescriptreact"
        },
        {
          "command": "abracadabra.moveStatementUp",
          "when": "editorLangId == javascript"
        },
        {
          "command": "abracadabra.moveStatementUp",
          "when": "editorLangId == javascriptreact"
        },
        {
          "command": "abracadabra.moveStatementUp",
          "when": "editorLangId == typescript"
        },
        {
          "command": "abracadabra.moveStatementUp",
          "when": "editorLangId == typescriptreact"
        },
        {
          "command": "abracadabra.moveStatementDown",
          "when": "editorLangId == javascript"
        },
        {
          "command": "abracadabra.moveStatementDown",
          "when": "editorLangId == javascriptreact"
        },
        {
          "command": "abracadabra.moveStatementDown",
          "when": "editorLangId == typescript"
        },
        {
          "command": "abracadabra.moveStatementDown",
          "when": "editorLangId == typescriptreact"
        },
        {
          "command": "abracadabra.addBracesToArrowFunction",
          "when": "editorLangId == javascript"
        },
        {
          "command": "abracadabra.addBracesToArrowFunction",
          "when": "editorLangId == javascriptreact"
        },
        {
          "command": "abracadabra.addBracesToArrowFunction",
          "when": "editorLangId == typescript"
        },
        {
          "command": "abracadabra.addBracesToArrowFunction",
          "when": "editorLangId == typescriptreact"
        }
      ]
    }
  }
}
